openapi: 3.0.0
info:
  title: Product and Category API
  version: 1.0.1
  description: API for managing products and categories

servers:
  - url: http://localhost:5000/api/v1
    description: Local development server

paths:
  /products:
    get:
      summary: Get all products
      responses:
        '200':
          description: List of all products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    post:
      summary: Create a new product
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductInput'
      responses:
        '201':
          description: Product created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /products/{id}:
    get:
      summary: Get a product by ID
      parameters:
        - name: id
          in: path
          required: true
          description: The product ID
          schema:
            type: string
      responses:
        '200':
          description: Product found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    put:
      summary: Update a product by ID
      parameters:
        - name: id
          in: path
          required: true
          description: The product ID
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductInput'
      responses:
        '200':
          description: Product updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      summary: Delete a product by ID
      parameters:
        - name: id
          in: path
          required: true
          description: The product ID
          schema:
            type: string
      responses:
        '204':
          description: Product deleted successfully (no content)
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /categories:
    get:
      summary: Get all categories
      responses:
        '200':
          description: List of all categories
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'

components:
  schemas:
    Product:
      type: object
      properties:
        _id:
          type: string
          description: Unique product identifier
        name:
          type: string
        description:
          type: string
        imgUrl:
          type: string
          description: URL of the product image
        category:
          type: string
        price:
          type: number
          format: float
        quantity:
          type: integer
        rating:
          type: number
          format: float
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - name
        - description
        - imgUrl
        - category
        - price
        - quantity

    ProductInput:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        imgUrl:
          type: string
        category:
          type: string
        price:
          type: number
          format: float
        quantity:
          type: integer
        rating:
          type: number
          format: float
      required:
        - name
        - description
        - imgUrl
        - category
        - price
        - quantity

    Category:
      type: object
      properties:
        _id:
          type: string
          description: Unique category identifier
        name:
          type: string
      required:
        - name

    Error:
      type: object
      properties:
        message:
          type: string
